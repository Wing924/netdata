#!/bin/sh
#
# netdata	Real-time performance monitoring, done right
# chkconfig: 345 99 01
# description:  Netdata is a daemon that collects data in real-time (per second)
#               and presents a web site to view and analyze them. The presentation
#               is also real-time and full of interactive charts that precisely
#               render all collected values.
# processname:	netdata

# Source functions
. /etc/rc.d/init.d/functions

DAEMON="netdata"
DAEMON_PATH=@sbindir_POST@
PIDFILE=@localstatedir_POST@/run/$DAEMON.pid
DAEMONOPTS="-P $PIDFILE"
STOP_TIMEOUT="60"

[ -e /etc/sysconfig/$DAEMON ] && . /etc/sysconfig/$DAEMON

LOCKFILE=/var/lock/subsys/$DAEMON

# Stop netdata processes
# Usage: kill_netdata [-p pidfile] [ -d delay] {program}
kill_netdata()
{
    local RC base pid pid_file= delay
    RC=0; delay=3
    if [ "$1" = "-p" ]; then
	pid_file=$2
	shift 2
    fi
    if [ "$1" = "-d" ]; then
	delay=$2
	shift 2
    fi

    # Save basename.
    base=${1##*/}

    # Find pid.
    __pids_var_run "$1" "$pid_file"
    RC=$?
    if [ -z "$pid" ]; then
	if [ -z "$pid_file" ]; then
	    pid="$(__pids_pidof "$1")"
	else
	    [ "$RC" = "4" ] && { failure $"$base shutdown" ; return $RC ;}
	fi
    fi

    # Kill it.
    if [ -n "$pid" ] ; then
	[ "$BOOTUP" = "verbose" -a -z "${LSB:-}" ] && echo -n "$base "
	# TERM first, then KILL if not dead
	if checkpid $pid; then
	    kill -TERM $pid >/dev/null 2>&1
	fi
	for i in `seq $(($delay*10))`; do
	    usleep 100000
	    checkpid $pid || break
	done
	if checkpid $pid; then
	    kill -KILL $pid >/dev/null 2>&1
	    usleep 100000
	fi
	checkpid $pid
	RC=$?
	[ "$RC" -eq 0 ] && failure $"$base shutdown" || success $"$base shutdown"
	RC=$((! $RC))
    else
	if [ -n "${LSB:-}" ]; then
	    RC=7 # Program is not running
	else
	    failure $"$base shutdown"
	    RC=0
	fi
    fi

    # Remove pid file if any.
    rm -f "${pid_file:-/var/run/$base.pid}"
    return $RC
}

service_start()
{
	[ -x $DAEMON_PATH ] || exit 5
	echo -n "Starting $DAEMON..."
	daemon $DAEMON_PATH/$DAEMON $DAEMONOPTS
	RETVAL=$?
	echo
	[ $RETVAL -eq 0 ] && touch $LOCKFILE
	return $RETVAL
}

service_stop()
{
	printf "%-50s" "Stopping $DAEMON..."
	kill_netdata -p ${PIDFILE} -d ${STOP_TIMEOUT} $DAEMON
	RETVAL=$?
	echo
	[ $RETVAL -eq 0 ] && rm -f ${PIDFILE} ${LOCKFILE}
	return $RETVAL
}

condrestart()
{
	if ! service_status > /dev/null; then
		RETVAL=$1
		return $RETVAL
	fi

	service_stop
	service_start
}

service_status()
{
	status -p ${PIDFILE} $DAEMON_PATH/$DAEMON
}

service_status_quiet()
{
	status -p ${PIDFILE} $DAEMON_PATH/$DAEMON >/dev/null 2>&1
}

case "$1" in
start)
	service_status_quiet && exit 0
	service_start
;;
stop)
	service_status_quiet || exit 0
	service_stop
;;
restart)
	service_stop
	service_start
;;
try-restart)
	condrestart 0
	;;
force-reload)
	condrestart 7
;;
status)
	service_status
;;
*)
	echo "Usage: $0 {start|stop|restart|try-restart|force-reload|status}"
	exit 3
esac
